name: 'wiz-cli'
on: [pull_request]

jobs:
  wiz-cli-iac-scan:
    name: 'Wiz-cli IaC Scan'
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    env:
      SCAN_PATH: '.' # Set the relative path in the repo to scan
      POLICY: '1_High_Misconfiguration' # Set the desired Wiz-cli policy to use
      DOCKER_POLICY: 'custom-policy-high-critical-CVE-vulnerabilities'

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v3
      - name: Configure AWS credentials from Test account
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::014524682603:role/oidc-for-github
          aws-region: us-east-1

      - name: Get secrets by name and by ARN
        uses: aws-actions/aws-secretsmanager-get-secrets@v1
        with:
          secret-ids: |
            WIZ_CLIENT_ID,WIZ_CLIENT_ID
            WIZ_CLIENT_SECRET,WIZ_CLIENT_SECRET
            JFROG_CREDENTIALS,jfrog
            JFROG_NPMRC_FILE,jfrog_npmrc_node18

      - name: Download Wiz-cli
        run: curl -o wizcli https://wizcli.app.wiz.io/latest/wizcli && chmod +x wizcli

      - name: Authenticate to Wiz
        run: ./wizcli auth --id "$WIZ_CLIENT_ID" --secret "$WIZ_CLIENT_SECRET"
        
      - name: Login to Docker registry
        run:  echo "$JFROG_CREDENTIALS" | docker login --username "techops.jfa.prod@omf.com" --password-stdin "jfafn.jfrog.io"
      
      - name: Download .npmrc file
        run:  echo "$JFROG_NPMRC_FILE" > .npmrc

      - name: Docker Build & Scan
        run: if test -f "Dockerfile"; then docker build -t $GITHUB_REPOSITORY:$GITHUB_SHA . ; docker images; ./wizcli docker scan --image $GITHUB_REPOSITORY:$GITHUB_SHA --tag repo=$GITHUB_REPOSITORY --tag branch=$GITHUB_REF_NAME --tag commit=$GITHUB_SHA  -p "$DOCKER_POLICY" --policy-hits-only; fi
      - name: Run wiz-cli IaC scan
        run: ./wizcli iac scan --path $SCAN_PATH --policy "$POLICY"  --tag repo=$GITHUB_REPOSITORY --tag branch=$GITHUB_REF_NAME --tag commit=$GITHUB_SHA  --policy-hits-only --timeout 30m
      - name: Run wiz-cli custom-policy-secrets scan
        run: ./wizcli iac scan --path $SCAN_PATH --policy "custom-policy-secrets" --tag repo=$GITHUB_REPOSITORY --tag branch=$GITHUB_REF_NAME --tag commit=$GITHUB_SHA  --policy-hits-only --timeout 30m
